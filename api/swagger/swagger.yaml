swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

  /product:
    # binds a127 app logic to a route
    x-swagger-router-controller: product
    get:
      description: used to fetch products
      # used as the method name of the controller
      operationId: getProduct
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - name: price
          in: query
          required: false
          type: number
        - name: stockQuantity
          in: query
          required: false
          type: number 
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductData"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      operationId: createProduct
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductData"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /product/{productId}:
    x-swagger-router-controller: product
    put:
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductData"
      responses: 
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /cart:
    x-swagger-router-controller: cart
    post:
      operationId: createCart
      parameters:
        - name: data
          in: body
          required: true
          schema: 
            $ref: "#/definitions/CartData"
      responses: 
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /cart/{cartId}:
    x-swagger-router-controller: cart
    put:
      operationId: updateCart
      parameters:
        - name: data
          in: body
          required: true
          schema: 
            $ref: "#/definitions/CartData"
        - name: cartId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    

# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string

  ProductData:
    required:
      - name
      - price
      - stockQuantity
    properties:
      name: {type: string}
      price: {type: number}
      stockQuantity: {type: number}

  CartData:
    properties:
      cartItems:
        type: array
        items:
          required:
            - productId
            - quantity
          properties:
            productId: {type: string}
            quantity: {type: number}


  ErrorResponse:
    properties:
      errorCode: {type: string}
      message: {type: string}

  SuccessResponse:
    properties:
      message: {type: string}